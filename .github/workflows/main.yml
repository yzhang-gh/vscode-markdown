name: CI

# Build VSIX packages in production and debug mode.
# Run tests against debug build.
#
# This workflow is designed to be run on pushing to master branch.

on:
  push:
    branches: [master]
    paths:
      - ".github/workflows/*.yml"
      - "src/**"
      - "syntaxes/**"
      - ".*"
      - "package*.json"
      - "tsconfig.json"
      - "webpack.*"
      - "!**.md"
  workflow_dispatch:
  repository_dispatch:
    types: ["package"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: "Setup Node.js environment"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Rust Toolchain for GitHub CI
        uses: actions-rust-lang/setup-rust-toolchain@v1.8.0

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: "Install dependencies"
        run: |
          npm run build-wasm  
          npm ci

      # Our prepublish script runs in production mode by default.
      # We should run tests against debug build to make error messages as useful as possible.
      - name: "Build release"
        run: |
          export RELEASE_DIR='tmp_release'  
          npx vsce package --pre-release
          export VSIX_FILE=$(ls *.vsix)
          unzip $VSIX_FILE -d $RELEASE_DIR
          export WASM_FILE=$(find ${RELEASE_DIR}/extension/dist -name "*.wasm" -print -quit)
          mv $WASM_FILE ${RELEASE_DIR}/extension/dist/zola_slug_bg.wasm
          cd $RELEASE_DIR
          zip -r ../${RELEASE_DIR}.zip .
          cd ..
          mv ${RELEASE_DIR}.zip $VSIX_FILE

          export NODE_ENV='development'
          export RELEASE_DIR='tmp_debug'
          export VSIX_FILE='debug.vsix'
          npx vsce package --pre-release --out $VSIX_FILE
          unzip $VSIX_FILE -d $RELEASE_DIR
          export WASM_FILE=$(find ${RELEASE_DIR}/extension/dist -name "*.wasm" -print -quit)
          mv $WASM_FILE ${RELEASE_DIR}/extension/dist/zola_slug_bg.wasm
          cd $RELEASE_DIR
          zip -r ../${RELEASE_DIR}.zip .
          cd ..
          mv ${RELEASE_DIR}.zip $VSIX_FILE

      - name: Test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Markdown-All-in-One-${{ github.sha }}
          path: ./*.vsix

      # If the run failed, npm log may help to diagnose.
      - name: "(debug) Upload npm log"
        if: ${{ !success() }}
        uses: actions/upload-artifact@v4
        with:
          name: "npm-debug-log"
          path: "~/.npm/_logs"
